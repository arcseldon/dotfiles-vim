set-option -g base-index 1
setw -g pane-base-index 1
set -g renumber-windows on

# fixes pausing in vim
set-option -sg escape-time 1

# tmux 2.1 uses this
set-option -g mouse on

# Start copy mode when scrolling up
set -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"

# act like vim
set-window-option -g mode-keys vi
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+

# # act like GNU screen
unbind C-b
set -g prefix C-a

# Allow creation of new session
bind-key C-b send-keys 'tat && exit' 'C-m'

# Kill session and move to alternate session if available
bind-key ! run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'

# alternate between last window
bind-key ^ last-window
# alternate between last session
bind-key C-^ switch-client -l

# break pane into new window
bind-key b break-pane -d

# session selection with choose tree
bind-key C-j choose-tree
bind C-h split-window -v "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"

# Allow C-A a to send C-A to application
bind C-a send-prefix

# set default shell to zsh
set -g default-shell /bin/zsh

# look good
set -g default-terminal "screen-256color"

set -g history-limit 5000

setw -g xterm-keys on

# # Rebinding the pane splitting bindings
# unbind % # Remove default bindings since we're replacing
bind | split-window -h
bind - split-window -v
bind _ split-window -v -c  "#{pane_current_path}"
bind \ split-window -h -c "#{pane_current_path}"

# Rebinding the default for new window
# to open with same directory as current pane
bind c new-window -c "#{pane_current_path}"

# # Set window notifications
setw -g monitor-activity on
set -g visual-activity on

# panes

# Resizing
bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5
bind-key -r H resize-pane -L 5
bind-key -r L resize-pane -R 5

# Further Resizing

## Fine adjustment (1 or 2 cursor cells per bump)
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1

# Coarse adjustment (5 or 10 cursor cells per bump)
bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5

# Borders on panes
set-option -g pane-border-fg green
set-option -g pane-border-bg black

# active pane border
set-option -g pane-active-border-fg white
set-option -g pane-active-border-bg yellow

# active pane normal, other shaded out
set -g window-style 'fg=colour240,bg=colour235'
set -g window-active-style 'fg=white,bg=black'

# statusbar --------------------------------------------------------------

# # default statusbar colors
set-option -g status-fg white
set-option -g status-bg black
set-option -g status-attr default

# # default window title colors
set-window-option -g window-status-style fg=cyan,dim,bg=default

# # active window title colors
setw -g window-status-current-style fg=white,nodim,bold,bg=red

# # command/message line colors
set-option -g message-fg white
set-option -g message-bg black
set-option -g message-attr bold

# # Refresh the status bar every 30 seconds.
set-option -g status-interval 30

# # The status bar itself.
set -g status-justify centre
set -g status-left-length 40
set -g status-left "#[fg=#009900]Session: #S #[fg=yellow]#I #[fg=cyan]#P"
# set -g status-right "#[fg=blue]#(~/bin/battery Discharging) |"
set -g status-right "#[fg=blue]#(~/bin/battery Discharging) | #[fg=cyan]%d %b %R"

set-option -g display-time 1000

# reload source file
bind-key r source-file ~/.tmux.conf \; display-message "Configuration reloaded"

# Macros

# Show url in buffer
bind C-o run-shell "open $(tmux show-buffer)"

# Pipe pane to log file
bind P pipe-pane -o "cat >>$HOME/#W-tmux.log" \; display-message "Toggled logging to $HOME/#W-tmux.log"

# Sync panes
bind C-S set-window-option synchronize-panes

# vi like copy paste behaviour
set-option -g default-command "command -v reattach-to-user-namespace >/dev/null 2>&1 && reattach-to-user-namespace -l $SHELL || $SHELL -l"

bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'V' send -X select-line
bind-key -T copy-mode-vi 'r' send -X rectangle-toggle
bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "pbcopy"
# note that 'q' will cancel if you want to get out of copy mode

# Clear the current pane AND clear the pane's history
bind C-l send-keys 'C-l'
bind C-k send-keys 'C-l'\; clear-history

# smart pane switching with awareness of vim splits
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Prompted join-pane
bind-key U command-prompt -p "join pane from: "  "join-pane -h -s '%%'"

# Easily swap a pane (targeted by pane number) with the current pane
bind Y display-panes\; command-prompt -p "pane #: "  "swap-pane -t '%%'"

# Quickly view system & process info in htop
bind-key h split-window -h "htop"

bind R run "(tmux split-window -v irb)"
bind X run "(tmux split-window -v iex)"

# hostname
# ls -alh
